{"ast":null,"code":"var _jsxFileName = \"/Users/ronny/Work/webcademy_react_portfilio_2/src/components/btnDarkMode/btnDarkMode.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport { useLocalStorage } from \"../../utils/useLocalStorage\";\nimport sun from \"./../../img/day-mode.png\";\nimport moon from \"./../../img/night-mode.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BtnDarkMode = () => {\n  _s();\n  const [darkMode, setDarkMode] = useLocalStorage('darkMode', 'light');\n  const btnRef = useRef(null);\n  useEffect(() => {\n    if (darkMode === 'dark') {\n      document.body.classList.add('dark');\n      btnRef.current.classList.add('dark-mode-btn--active');\n    } else {\n      document.body.classList.remove('dark');\n      btnRef.current.classList.remove('dark-mode-btn--active');\n    }\n  }, [darkMode]);\n  const toggleDarkMode = () => {\n    setDarkMode(currentValue => {\n      return currentValue === 'light' ? 'dark' : 'light';\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    ref: btnRef,\n    className: \"dark-mode-btn\",\n    onClick: toggleDarkMode,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: sun,\n      alt: \"Light mode\",\n      className: \"dark-mode-btn__icon\",\n      width: \"16px\",\n      height: \"16px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: moon,\n      alt: \"Dark mode\",\n      className: \"dark-mode-btn__icon\",\n      width: \"16px\",\n      height: \"16px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(BtnDarkMode, \"vbxm/5G3JGYDSNgyeOlbPUfy/hU=\", false, function () {\n  return [useLocalStorage];\n});\n_c = BtnDarkMode;\nexport default BtnDarkMode;\nvar _c;\n$RefreshReg$(_c, \"BtnDarkMode\");","map":{"version":3,"names":["useState","useEffect","useRef","useLocalStorage","sun","moon","jsxDEV","_jsxDEV","BtnDarkMode","_s","darkMode","setDarkMode","btnRef","document","body","classList","add","current","remove","toggleDarkMode","currentValue","ref","className","onClick","children","src","alt","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ronny/Work/webcademy_react_portfilio_2/src/components/btnDarkMode/btnDarkMode.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\"\nimport { useLocalStorage } from \"../../utils/useLocalStorage\"\nimport sun from \"./../../img/day-mode.png\"\nimport moon from \"./../../img/night-mode.png\"\n\nconst BtnDarkMode = () => {\n\n\n    const [darkMode, setDarkMode] = useLocalStorage('darkMode', 'light');\n\n    const btnRef = useRef(null);\n\n    useEffect(() => {\n        if (darkMode === 'dark') {\n            document.body.classList.add('dark')\n            btnRef.current.classList.add('dark-mode-btn--active')\n        } else {\n            document.body.classList.remove('dark')\n            btnRef.current.classList.remove('dark-mode-btn--active')\n        }\n    }, [darkMode])\n\n    const toggleDarkMode = () => {\n        setDarkMode((currentValue) => {\n            return currentValue === 'light' ? 'dark' : 'light'\n        })\n    }\n\n    return (\n        <button ref={btnRef} className=\"dark-mode-btn\" onClick={toggleDarkMode}>\n            <img src={sun} alt=\"Light mode\" className=\"dark-mode-btn__icon\" width=\"16px\" height=\"16px\"/>\n            <img src={moon} alt=\"Dark mode\" className=\"dark-mode-btn__icon\" width=\"16px\" height=\"16px\"/>\n        </button>\n    )\n}\n\nexport default BtnDarkMode;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,SAASC,eAAe,QAAQ,6BAA6B;AAC7D,OAAOC,GAAG,MAAM,0BAA0B;AAC1C,OAAOC,IAAI,MAAM,4BAA4B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAGtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,eAAe,CAAC,UAAU,EAAE,OAAO,CAAC;EAEpE,MAAMS,MAAM,GAAGV,MAAM,CAAC,IAAI,CAAC;EAE3BD,SAAS,CAAC,MAAM;IACZ,IAAIS,QAAQ,KAAK,MAAM,EAAE;MACrBG,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;MACnCJ,MAAM,CAACK,OAAO,CAACF,SAAS,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACzD,CAAC,MAAM;MACHH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACG,MAAM,CAAC,MAAM,CAAC;MACtCN,MAAM,CAACK,OAAO,CAACF,SAAS,CAACG,MAAM,CAAC,uBAAuB,CAAC;IAC5D;EACJ,CAAC,EAAE,CAACR,QAAQ,CAAC,CAAC;EAEd,MAAMS,cAAc,GAAGA,CAAA,KAAM;IACzBR,WAAW,CAAES,YAAY,IAAK;MAC1B,OAAOA,YAAY,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;IACtD,CAAC,CAAC;EACN,CAAC;EAED,oBACIb,OAAA;IAAQc,GAAG,EAAET,MAAO;IAACU,SAAS,EAAC,eAAe;IAACC,OAAO,EAAEJ,cAAe;IAAAK,QAAA,gBACnEjB,OAAA;MAAKkB,GAAG,EAAErB,GAAI;MAACsB,GAAG,EAAC,YAAY;MAACJ,SAAS,EAAC,qBAAqB;MAACK,KAAK,EAAC,MAAM;MAACC,MAAM,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC5FzB,OAAA;MAAKkB,GAAG,EAAEpB,IAAK;MAACqB,GAAG,EAAC,WAAW;MAACJ,SAAS,EAAC,qBAAqB;MAACK,KAAK,EAAC,MAAM;MAACC,MAAM,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxF,CAAC;AAEjB,CAAC;AAAAvB,EAAA,CA7BKD,WAAW;EAAA,QAGmBL,eAAe;AAAA;AAAA8B,EAAA,GAH7CzB,WAAW;AA+BjB,eAAeA,WAAW;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}